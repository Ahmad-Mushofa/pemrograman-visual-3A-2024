
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Shely
 */
public class prosesSpp extends javax.swing.JFrame {
    Icon iconSukses = new javax.swing.ImageIcon(getClass().getResource("Tick_Mark_Dark_icon-icons.com_69147.png"));
    int x = 0;

    /**
     * Creates new form prosesSpp
     */
    public prosesSpp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblSpp = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblSiswa = new javax.swing.JLabel();
        lblJumlah = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtJumlah = new javax.swing.JTextField();
        lblBulan = new javax.swing.JLabel();
        checkJanuari = new javax.swing.JCheckBox();
        checkFebruari = new javax.swing.JCheckBox();
        checkMaret = new javax.swing.JCheckBox();
        checkApril = new javax.swing.JCheckBox();
        checkMei = new javax.swing.JCheckBox();
        checkJuni = new javax.swing.JCheckBox();
        checkJuli = new javax.swing.JCheckBox();
        checkAgustus = new javax.swing.JCheckBox();
        checkSeptember = new javax.swing.JCheckBox();
        checkOktober = new javax.swing.JCheckBox();
        checkNovember = new javax.swing.JCheckBox();
        checkDesember = new javax.swing.JCheckBox();
        lblRiwayat = new javax.swing.JLabel();
        btnHitung = new javax.swing.JButton();
        btnStatus = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 0));

        jPanel2.setBackground(new java.awt.Color(204, 0, 0));

        lblSpp.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lblSpp.setForeground(new java.awt.Color(255, 255, 204));
        lblSpp.setText("PEMBAYARAN SPP");
        lblSpp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSppMouseClicked(evt);
            }
        });
        jPanel2.add(lblSpp);

        jPanel3.setBackground(new java.awt.Color(153, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSiswa.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        lblSiswa.setForeground(new java.awt.Color(255, 255, 204));
        lblSiswa.setText("Nama Siswa : ");
        jPanel3.add(lblSiswa, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 6, -1, -1));

        lblJumlah.setFont(new java.awt.Font("Segoe Script", 1, 14)); // NOI18N
        lblJumlah.setForeground(new java.awt.Color(255, 255, 204));
        lblJumlah.setText("Jumlah SPP/Bulan (Rp) :");
        jPanel3.add(lblJumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 55, -1, -1));

        txtNama.setBackground(new java.awt.Color(255, 204, 153));
        txtNama.setFont(new java.awt.Font("Segoe Script", 1, 12)); // NOI18N
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });
        jPanel3.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 8, 299, -1));

        txtJumlah.setBackground(new java.awt.Color(255, 204, 153));
        txtJumlah.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        txtJumlah.setText("550.000");
        jPanel3.add(txtJumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 53, 299, -1));

        lblBulan.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        lblBulan.setForeground(new java.awt.Color(255, 255, 204));
        lblBulan.setText("Bulan :  ");
        jPanel3.add(lblBulan, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 99, -1, -1));

        checkJanuari.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkJanuari.setForeground(new java.awt.Color(255, 255, 153));
        checkJanuari.setText("Januari");
        jPanel3.add(checkJanuari, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 100, 85, -1));

        checkFebruari.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkFebruari.setForeground(new java.awt.Color(255, 255, 153));
        checkFebruari.setText("Februari");
        checkFebruari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFebruariActionPerformed(evt);
            }
        });
        jPanel3.add(checkFebruari, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 100, 85, -1));

        checkMaret.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkMaret.setForeground(new java.awt.Color(255, 255, 153));
        checkMaret.setText("Maret");
        checkMaret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMaretActionPerformed(evt);
            }
        });
        jPanel3.add(checkMaret, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 100, 85, -1));

        checkApril.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkApril.setForeground(new java.awt.Color(255, 255, 153));
        checkApril.setText("April");
        jPanel3.add(checkApril, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 100, 85, -1));

        checkMei.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkMei.setForeground(new java.awt.Color(255, 255, 153));
        checkMei.setText("Mei");
        jPanel3.add(checkMei, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 138, 85, -1));

        checkJuni.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkJuni.setForeground(new java.awt.Color(255, 255, 153));
        checkJuni.setText("Juni");
        jPanel3.add(checkJuni, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 85, -1));

        checkJuli.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkJuli.setForeground(new java.awt.Color(255, 255, 153));
        checkJuli.setText("Juli");
        checkJuli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkJuliActionPerformed(evt);
            }
        });
        jPanel3.add(checkJuli, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 138, 85, -1));

        checkAgustus.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkAgustus.setForeground(new java.awt.Color(255, 255, 153));
        checkAgustus.setText("Agustus");
        jPanel3.add(checkAgustus, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 138, 85, -1));

        checkSeptember.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkSeptember.setForeground(new java.awt.Color(255, 255, 153));
        checkSeptember.setText("September");
        jPanel3.add(checkSeptember, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 176, 91, -1));

        checkOktober.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkOktober.setForeground(new java.awt.Color(255, 255, 153));
        checkOktober.setText("Oktober");
        jPanel3.add(checkOktober, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 176, 85, -1));

        checkNovember.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkNovember.setForeground(new java.awt.Color(255, 255, 153));
        checkNovember.setText("November");
        jPanel3.add(checkNovember, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 85, -1));

        checkDesember.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        checkDesember.setForeground(new java.awt.Color(255, 255, 153));
        checkDesember.setText("Desember");
        jPanel3.add(checkDesember, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 176, 85, -1));

        lblRiwayat.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        lblRiwayat.setForeground(new java.awt.Color(255, 255, 204));
        lblRiwayat.setText("Riwayat Pembayaran : ");
        jPanel3.add(lblRiwayat, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 220, -1, -1));

        btnHitung.setBackground(new java.awt.Color(102, 0, 0));
        btnHitung.setFont(new java.awt.Font("Segoe Print", 3, 12)); // NOI18N
        btnHitung.setForeground(new java.awt.Color(255, 255, 204));
        btnHitung.setText("Hitung Pembayaran");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });
        jPanel3.add(btnHitung, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 220, -1, -1));

        btnStatus.setBackground(new java.awt.Color(102, 0, 0));
        btnStatus.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        btnStatus.setForeground(new java.awt.Color(255, 255, 204));
        btnStatus.setText("Status Pembayaran");
        btnStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusActionPerformed(evt);
            }
        });
        jPanel3.add(btnStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 255, -1, -1));

        btnSimpan.setBackground(new java.awt.Color(102, 0, 0));
        btnSimpan.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        btnSimpan.setForeground(new java.awt.Color(255, 255, 204));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel3.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 235, -1, -1));

        jPanel4.setBackground(new java.awt.Color(102, 0, 51));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jTable1.setBackground(new java.awt.Color(255, 204, 153));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama Siswa", "Jumlah SPP", "Total Pembayaran", "Sisa Pembayaran"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane2.setViewportView(jTable1);

        btnTambah.setBackground(new java.awt.Color(153, 0, 0));
        btnTambah.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 204));
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(153, 0, 0));
        btnKeluar.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        btnKeluar.setForeground(new java.awt.Color(255, 255, 204));
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnKeluar)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTambah)
                    .addComponent(btnKeluar))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSppMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSppMouseClicked

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void checkMaretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMaretActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkMaretActionPerformed

    private void checkFebruariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFebruariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkFebruariActionPerformed

    private void checkJuliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkJuliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkJuliActionPerformed

    private void btnStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusActionPerformed
    if (jTable1.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Silahkan Hitung Total Terlebih Dahulu.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Exit the method if the input is not valid
    } else {
        String status = "Lunas";
        StringBuilder bulanBelumDibayar = new StringBuilder();
        StringBuilder bulanSudahDibayar = new StringBuilder();

        JCheckBox[] checkboxes = {
            checkJanuari, checkFebruari, checkMaret, checkApril, checkMei, checkJuni, checkJuli, checkAgustus, checkSeptember, checkOktober, checkNovember, checkDesember
        };
        String[] bulan = { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"};
        
        for (int i = 0; i < checkboxes.length; i++) {
            if (!checkboxes[i].isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar.append(bulan[i]).append("\n");
            }else{
                bulanSudahDibayar.append(bulan[i]).append("\n");
            }
        }

        if (status.equals("Menunggak")) {
            JOptionPane.showMessageDialog(this, "Status: " + status + "\nBulan yang belum dibayar:\n" + bulanBelumDibayar.toString() + "\nBulan yang sudah dibayar :\n" + bulanSudahDibayar.toString());
        } else {
            JOptionPane.showMessageDialog(this, "Status: " + status + "\nSemua bulan telah dibayar.");
        }
    }    // TODO add your handling code here:
    }//GEN-LAST:event_btnStatusActionPerformed

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
    // Ambil nama siswa dan jumlah SPP per bulan dari input
    String namaSiswa = txtNama.getText();
    String jumlahSPPStr = txtJumlah.getText();

    // Validasi nama siswa
    if (namaSiswa.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Silakan masukkan nama siswa.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Exit the method if the input is not valid
    }

    // Validasi jumlah SPP
    if (jumlahSPPStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Silakan masukkan jumlah SPP per bulan.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Exit the method if the input is not valid
    }

    double jumlahSPP;
    try {
        jumlahSPP = Double.parseDouble(jumlahSPPStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Jumlah SPP harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Exit the method if the input is not a valid number
    }
    
    // Validasi checkbox
    JCheckBox[] checkboxes = {
        checkJanuari, checkFebruari, checkMaret, checkApril, checkMei, checkJuni, checkJuli, checkAgustus, checkSeptember, checkOktober, checkNovember, checkDesember      
    };
    boolean anySelected = false;
    for (JCheckBox checkbox : checkboxes) {
        if (checkbox.isSelected()) {
            anySelected = true;
            break;
        }
    }
    
    if (!anySelected) {
        JOptionPane.showMessageDialog(this, "Silakan pilih setidaknya satu bulan.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Exit the method if no checkboxes are selected
    }

    double totalPembayaran = 0;
    StringBuilder pembayaranDetail = new StringBuilder("Detail Pembayaran untuk " + namaSiswa + ":\n");

    // Hitung total pembayaran berdasarkan checkbox yang dipilih
    String[] bulan = { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" };
    for (int i = 0; i < checkboxes.length; i++) {
        if (checkboxes[i].isSelected()) {
            totalPembayaran += jumlahSPP;
            pembayaranDetail.append(bulan[i]).append(": ").append(jumlahSPP).append("\n");
        }
    }
    pembayaranDetail.append("Total Pembayaran: ").append(totalPembayaran).append("\n");

    // Display the payment details
    JOptionPane.showMessageDialog(this, pembayaranDetail.toString());
    }//GEN-LAST:event_btnHitungActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
    // Ambil nama siswa dan jumlah SPP per bulan dari input
    String namaSiswa = txtNama.getText().trim();
    String jumlahSPPStr = txtJumlah.getText().trim();
    
    if (namaSiswa.isEmpty() || jumlahSPPStr.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Silahkan masukkan nama siswa dan jumlah SPP per bulan.", "Error", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    
    double jumlahSpp;
    try {
        jumlahSpp = Double.parseDouble(jumlahSPPStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Jumlah SPP harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
     
    double totalPembayaran = 0;
    double sisaPembayaran = 0;
    StringBuilder pembayaranDetail = new StringBuilder("\n~~~Pembayaran Telah Berhasil!!~~~\nDetail Pembayaran untuk " + namaSiswa + ":\n");
    
    JCheckBox[] checkboxes = {
        checkJanuari, checkFebruari, checkMaret, checkApril, checkMei, checkJuni, checkJuli, checkAgustus, checkSeptember, checkOktober, checkNovember, checkDesember
    };
    String[] bulan = { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"};
    
    for (int i = 0; i < checkboxes.length; i++) {
        if (checkboxes[i].isSelected()) {
            totalPembayaran += jumlahSpp;
            pembayaranDetail.append(bulan[i]).append(": ").append(jumlahSpp).append("\n");
        }
    }

    sisaPembayaran = (12 * jumlahSpp) - totalPembayaran;

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int rowCount = model.getRowCount();
    boolean isStudentFound = false;
    int studentRow = -1;
        
    for (int i = 0; i < rowCount; i++) {
        Object value = model.getValueAt(i, 0);
        if (value != null && value.equals(namaSiswa)) {
            isStudentFound = true;
            studentRow = i;
            break;
        }
    }
    
    if (isStudentFound) {
        double keluarTotal = (double) model.getValueAt(studentRow, 2);
        double newTotalPembayaran = keluarTotal + totalPembayaran;
        
        model.setValueAt(newTotalPembayaran, studentRow, 2);
        model.setValueAt((12 * jumlahSpp) - newTotalPembayaran, studentRow, 3);
    } else {
        model.addRow(new Object[]{namaSiswa, jumlahSpp, totalPembayaran, sisaPembayaran});
    }

    JOptionPane.showMessageDialog(this, pembayaranDetail.append("Total Pembayaran: ").append(totalPembayaran).append("\nSisa Pembayaran: ").append(sisaPembayaran).toString(), "Pembayaran Berhasil", JOptionPane.INFORMATION_MESSAGE, iconSukses);
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Apakah anda ingin keluar dari Pembayaran Spp ini?", "Peringatan", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (response == JOptionPane.YES_OPTION){
//            Logika untuk menangani pembatalan
            dispose();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
    String namaSiswa = txtNama.getText().trim();
    System.out.println("Button clicked. Nama Siswa: " + namaSiswa);
    
    if (namaSiswa.isEmpty()) {
        txtNama.setText("");
        resetCheckboxes();
        System.out.println("Nama Siswa is empty. Resetting checkboxes.");
        return;
    }
    
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int rowCount = model.getRowCount();
    boolean isStudentFound = false;
    int studentRow = -1;
    
    for (int i = 0; i < rowCount; i++) {
        Object value = model.getValueAt(i, 0);
        if (value != null && value.equals(namaSiswa)) {
            isStudentFound = true;
            studentRow = i;
            break;
        }
    }
    
    JCheckBox[] checkboxes = {
        checkJanuari, checkFebruari, checkMaret, checkApril, checkMei, checkJuni, checkJuli, checkAgustus, checkSeptember, checkOktober, checkNovember, checkDesember
    };
    
    if (isStudentFound) {
        double totalPembayaran = (double) model.getValueAt(studentRow, 2);
        double jumlahSpp = (double) model.getValueAt(studentRow, 1);
        int monthsPaid = (int) (totalPembayaran / jumlahSpp);
        
        for (int i = 0; i < monthsPaid; i++) {
            checkboxes[i].setSelected(true);
            checkboxes[i].setEnabled(false);
        }
        for (int i = monthsPaid; i < checkboxes.length; i++) {
            checkboxes[i].setSelected(false);
            checkboxes[i].setEnabled(true);
        }
        System.out.println("Student found. Updated checkboxes for paid months.");
        int response = JOptionPane.showConfirmDialog(this, "\nSiswa ini sudah membayar untuk bulan: " + getPaidMonths(monthsPaid) + ".\nSisa bulan yang belum dibayar: " + getUnpaidMonths(monthsPaid) + ". \nApakah ingin melanjutkan pembayaran?", "Konfirmasi Pembayaran", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            // Lanjutkan pembayaran
            double pembayaranBaru = Double.parseDouble(JOptionPane.showInputDialog(this, "Masukkan jumlah pembayaran baru:"));
            totalPembayaran += pembayaranBaru;
            model.setValueAt(totalPembayaran, studentRow, 2);
            monthsPaid = (int) (totalPembayaran / jumlahSpp);
            for (int i = 0; i < monthsPaid; i++) {
                checkboxes[i].setSelected(true);
                checkboxes[i].setEnabled(false);
            }
            for (int i = monthsPaid; i < checkboxes.length; i++) {
                checkboxes[i].setSelected(false);
                checkboxes[i].setEnabled(true);
            }
            if (monthsPaid >= 12) {
                JOptionPane.showMessageDialog(this, "Pembayaran lunas untuk siswa: " + namaSiswa);
                model.setValueAt("Lunas", studentRow, 3); // Asumsi kolom ke-4 adalah status pembayaran
            }
        } else {
            resetCheckboxes();
            txtNama.setText("");
        }
    } else {
        Object[] newRow = {namaSiswa, 0.0, 0.0, "Belum Lunas"};
        model.addRow(newRow);
        txtNama.setText("");
        resetCheckboxes();
        System.out.println("Student not found. Resetting checkboxes.");
        addNewStudent(namaSiswa);
    }
    }//GEN-LAST:event_btnTambahActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prosesSpp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prosesSpp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prosesSpp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prosesSpp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prosesSpp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnStatus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JCheckBox checkAgustus;
    private javax.swing.JCheckBox checkApril;
    private javax.swing.JCheckBox checkDesember;
    private javax.swing.JCheckBox checkFebruari;
    private javax.swing.JCheckBox checkJanuari;
    private javax.swing.JCheckBox checkJuli;
    private javax.swing.JCheckBox checkJuni;
    private javax.swing.JCheckBox checkMaret;
    private javax.swing.JCheckBox checkMei;
    private javax.swing.JCheckBox checkNovember;
    private javax.swing.JCheckBox checkOktober;
    private javax.swing.JCheckBox checkSeptember;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBulan;
    private javax.swing.JLabel lblJumlah;
    private javax.swing.JLabel lblRiwayat;
    private javax.swing.JLabel lblSiswa;
    private javax.swing.JLabel lblSpp;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables

    private String getPaidMonths(int monthsPaid) {
        String[] months = {"Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"};
        StringBuilder paidMonths = new StringBuilder();
        for (int i = 0; i < monthsPaid; i++) {
            if (i > 0) paidMonths.append(", ");
            paidMonths.append(months[i]);
        }
        return paidMonths.toString();
    }

    private String getUnpaidMonths(int monthsPaid) {
        String[] months = {"Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"};
        StringBuilder unpaidMonths = new StringBuilder();
        for (int i = monthsPaid; i < months.length; i++) {
            if (i > monthsPaid) unpaidMonths.append(", ");
            unpaidMonths.append(months[i]);
        }
        return unpaidMonths.toString();
    }

    private void resetCheckboxes() {
        JCheckBox[] checkboxes = {
            checkJanuari, checkFebruari, checkMaret, checkApril, checkMei, checkJuni, checkJuli, checkAgustus, checkSeptember, checkOktober, checkNovember, checkDesember
        };
        for (JCheckBox checkbox : checkboxes) {
            checkbox.setSelected(false);
            checkbox.setEnabled(true);
        }
        }

    private void addNewStudent(String namaSiswa) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{namaSiswa, 0.0, 0.0});
        JOptionPane.showMessageDialog(this, "Siswa baru ditambahkan: " + namaSiswa);
    }
}
