/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tabbedPane;

import java.awt.Component;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Shely
 */
public class frameBaru extends javax.swing.JFrame {
    private int targetNumber;
    private int percobaan;
    private int maxPercobaan = 10;
    private int score;
    private DefaultListModel<String> scoreModel;
    private JList<String> scoreList;
    private int totalScore = 0;
//    int index = 0;
    int index = 1; // Inisialisasi index di luar metode, mulai dari 1
    private Set<String> nameSet = new HashSet<>();
    

    /**
     * Creates new form frameBaru
     */
    public frameBaru() {
        initComponents();
        btnTebak.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scoreTabPane = new raven.tabbed.TabbedPaneCustom();
        jPanel1 = new javax.swing.JPanel();
        panelJudul = new javax.swing.JPanel();
        lbltebakAngka = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lbkTebakan = new javax.swing.JLabel();
        lblCek = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        txtAngka = new javax.swing.JTextField();
        txtCek = new javax.swing.JTextField();
        txtScore = new javax.swing.JTextField();
        btnTebak = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnKeluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textHasilScore = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scoreTabPane.setBackground(new java.awt.Color(255, 204, 204));
        scoreTabPane.setForeground(new java.awt.Color(102, 102, 102));
        scoreTabPane.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 12)); // NOI18N
        scoreTabPane.setSelectedColor(new java.awt.Color(0, 0, 102));

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        panelJudul.setBackground(new java.awt.Color(102, 102, 102));
        panelJudul.setLayout(new java.awt.GridBagLayout());

        lbltebakAngka.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lbltebakAngka.setForeground(new java.awt.Color(255, 255, 255));
        lbltebakAngka.setText("PERMAINAN TEBAK ANGKA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 92, 0, 111);
        panelJudul.add(lbltebakAngka, gridBagConstraints);

        lblName.setFont(new java.awt.Font("Segoe Script", 1, 12)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Angka Berapa Aku ???");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 145, 20, 0);
        panelJudul.add(lblName, gridBagConstraints);

        lbkTebakan.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lbkTebakan.setForeground(new java.awt.Color(204, 204, 204));
        lbkTebakan.setText("TEBAKAN");

        lblCek.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblCek.setForeground(new java.awt.Color(204, 204, 204));
        lblCek.setText("CEK");

        lblScore.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        lblScore.setForeground(new java.awt.Color(204, 204, 204));
        lblScore.setText("TOTAL SCORE");

        txtAngka.setBackground(new java.awt.Color(51, 51, 51));
        txtAngka.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        txtAngka.setForeground(new java.awt.Color(204, 204, 204));

        txtCek.setBackground(new java.awt.Color(51, 51, 51));
        txtCek.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        txtCek.setForeground(new java.awt.Color(204, 204, 204));

        txtScore.setBackground(new java.awt.Color(51, 51, 51));
        txtScore.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        txtScore.setForeground(new java.awt.Color(204, 204, 204));

        btnTebak.setBackground(new java.awt.Color(255, 255, 153));
        btnTebak.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 12)); // NOI18N
        btnTebak.setText("Tebak");
        btnTebak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTebakActionPerformed(evt);
            }
        });

        btnStart.setBackground(new java.awt.Color(255, 255, 153));
        btnStart.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 12)); // NOI18N
        btnStart.setText("Start Game");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 153));
        btnReset.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelJudul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbkTebakan)
                    .addComponent(lblCek)
                    .addComponent(lblScore))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAngka)
                    .addComponent(txtCek)
                    .addComponent(txtScore, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnStart)
                .addGap(92, 92, 92)
                .addComponent(btnTebak)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbkTebakan)
                    .addComponent(txtAngka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCek)
                    .addComponent(txtCek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblScore)
                    .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStart)
                            .addComponent(btnReset))
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTebak)
                        .addGap(29, 29, 29))))
        );

        scoreTabPane.addTab("Permainan", jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        btnKeluar.setBackground(new java.awt.Color(255, 255, 153));
        btnKeluar.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 12)); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        textHasilScore.setEditable(false);
        textHasilScore.setBackground(new java.awt.Color(51, 51, 51));
        textHasilScore.setColumns(20);
        textHasilScore.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        textHasilScore.setForeground(new java.awt.Color(204, 204, 204));
        textHasilScore.setRows(5);
        jScrollPane1.setViewportView(textHasilScore);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnKeluar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnKeluar)
                .addGap(23, 23, 23))
        );

        scoreTabPane.addTab("Score", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scoreTabPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scoreTabPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Apakah anda ingin keluar dari permainan ini?", "Peringatan", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (response == JOptionPane.YES_OPTION){
//            Logika untuk menangani pembatalan
            dispose();
        }
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Permainan Dimulai.  Apakah Anda Ingin Bermain ?", "Mulai Permainan", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION){
//            start game
            startGame();
            JOptionPane.showMessageDialog(null, "Score Awal : 0\nSilahkan tebak angka antara 1 dan 100.");
        }else{
//            exit game
            JOptionPane.showMessageDialog(null, "Anda Keluar Dari Game Tersebut.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnTebakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTebakActionPerformed
        // TODO add your handling code here:
        String tebakAngka = txtAngka.getText();
        checkTebakan(tebakAngka);
    }//GEN-LAST:event_btnTebakActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        resetGame();
        textHasilScore.setText("");
        JOptionPane.showMessageDialog(null, "Permainan telah direset. Silakan mulai kembali.", "Reset Permainan", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameBaru().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnTebak;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbkTebakan;
    private javax.swing.JLabel lblCek;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel lbltebakAngka;
    private javax.swing.JPanel panelJudul;
    private raven.tabbed.TabbedPaneCustom scoreTabPane;
    private javax.swing.JTextArea textHasilScore;
    private javax.swing.JTextField txtAngka;
    private javax.swing.JTextField txtCek;
    private javax.swing.JTextField txtScore;
    // End of variables declaration//GEN-END:variables

//    start game function
    private void startGame() {
        resetGame(); // Menyetel ulang variabel game jika perlu
        targetNumber = (int)(Math.random()*99) +1; //random number
        percobaan = maxPercobaan;
        score = 0;
        btnTebak.setEnabled(true);
      
//      update initial score
       txtScore.setText("Score : " + score);
       
       txtCek.setText("");
       txtScore.setText("Score : 0");
       txtAngka.setText("");
       btnStart.setEnabled(false);
    }

    private void checkTebakan(String input) {
        // Validasi input
        if (input == null || input.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Inputkan angka tebakan terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int tebakan;
        try {
            tebakan = Integer.parseInt(input);
            if (tebakan < 1 || tebakan > 100) {
                JOptionPane.showMessageDialog(null, "Masukkan angka valid tidak boleh bilangan (-).", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Input harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        percobaan--; // Mengurangi jumlah percobaan

        // Cek tebakan
        String resultText;
        if (tebakan < targetNumber) {
            resultText = "Tebakan Anda Terlalu Kecil. Coba lagi!";
        } else if (tebakan > targetNumber) {
            resultText = "Tebakan Anda Terlalu Besar. Coba lagi!";
        } else {
            // Tebakan benar
            int roundScore = percobaan * 10; // Hitung skor berdasarkan percobaan yang tersisa
            totalScore += roundScore; // Tambah ke total skor
            txtScore.setText("Score: " + totalScore + " | Sisa Percobaan: " + percobaan);
            txtCek.setText("Selamat! Anda berhasil menebak dengan benar! Skor Anda: " + totalScore);

            int response = JOptionPane.showConfirmDialog(null, "Ingin Bermain Lagi?", "Lanjutkan Permainan", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                resetGame();
                btnTebak.setEnabled(true);
            } else {
                String name;
                do {
                    name = JOptionPane.showInputDialog("Masukkan Nama Anda:");
                    if (name != null && !name.trim().isEmpty()) {
                        if (nameSet.contains(name)) {
                            JOptionPane.showMessageDialog(null, "Nama sudah ada! Masukkan nama baru.", "Nama Duplikat", JOptionPane.WARNING_MESSAGE);
                        } else {
                            nameSet.add(name); // Add name to the set of unique names
                            addToScoreList(name, totalScore); // Tambahkan ke daftar skor
                            scoreTabPane.setSelectedIndex(1); // Pindah ke tab Score untuk menampilkan hasil
                            break;
                        }
                    }
                } while (name == null || name.trim().isEmpty() || nameSet.contains(name));

                resetTotalScore();
            }
            return;
        }

        txtScore.setText("Score: " + totalScore + " | Sisa Percobaan: " + percobaan);
        txtCek.setText(resultText);
        Timer timer = new Timer(900, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                txtCek.setText(""); // Kosongkan untuk sementara
                ((Timer) e.getSource()).stop(); // Hentikan timer setelah satu kali eksekusi
                txtCek.setText(resultText); // Mengisi kembali dengan pesan sesuai hasil tebakan
            }
        });
        timer.setRepeats(false);
        timer.start();

        if (percobaan <= 0) {
            JOptionPane.showMessageDialog(null, "Anda Gagal! Target angka adalah " + targetNumber);
            btnStart.setEnabled(true);
            btnTebak.setEnabled(true);
            String name;
            do {
                name = JOptionPane.showInputDialog("Masukkan Nama Anda:");
                if (name != null && !name.trim().isEmpty()) {
                    if (nameSet.contains(name)) {
                        JOptionPane.showMessageDialog(null, "Nama sudah ada! Masukkan nama baru.", "Nama Duplikat", JOptionPane.WARNING_MESSAGE);
                    } else {
                        nameSet.add(name); // Add name to the set of unique names
                        addToScoreList(name, totalScore); // Tambahkan skor total ke daftar skor
                        scoreTabPane.setSelectedIndex(1); // Pindah ke tab Score
                        break;
                    }
                }
            } while (name == null || name.trim().isEmpty() || nameSet.contains(name));

            resetTotalScore();
            resetGame();
        }
    
    }


    private void addToScoreList(String name, int score) {
//        for (int i = 0; i<index; i++){
//          textHasilScore.append(i+1+". Nama : " +name+ "  Score "+score+"\n");
//        }
    // Tambahkan nama dan skor pemain ke textHasilScore dengan nomor urut berdasarkan index
    textHasilScore.append(index + ". Nama: " + name + " | Score: " + score + "\n");
    index++; // Naikkan index hanya di sini setiap kali pemain baru ditambahkan
        
    }

    private void resetGame() {
        targetNumber = (int)(Math.random() * 99) + 1; // random number between 1 and 100
//        percobaan = maxPercobaan;
//        textHasilScore.setText("");
        // Reset semua variabel game ke kondisi awal
        percobaan = 10; // Contoh pengaturan ulang jumlah percobaan
        totalScore = 0;
        txtScore.setText("Score: 0 | Sisa Percobaan: " + percobaan);
        txtCek.setText("");
        txtAngka.setText("");
        btnTebak.setEnabled(false);
    }

    private void resetTotalScore() {
        totalScore = 0;
    }


}
